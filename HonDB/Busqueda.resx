<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAQAP3IgAAAIDpC8DL6SQAAAAA0xOAXelkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAYCwArE57mwSA59PyYQDYOIkAbEtdkwHAcek36dH0SBO2Jf00zRkCgIVpfdqSHpnA7kun
        1QHAxemJ1DNF2poeTiuGAaAr/Tw9lbbX2ZOpZxzaNoprVv0ozTkMAFXXlCfzSG1NPcO0bYSf35F+kmZP
        BgCtaX5a0KR1pLmpZQgAWtK81JEWTHAz6wCgPXVOsY5Os4YBoGpu6h5FFRqd41DXKK/ZPvjwD0KgrTyV
        u0fomNQ5TN11NHcAHjMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzm7r7N9nOritKdYsrAAAAAElFTkSuQmCC
</value>
  </data>
</root>